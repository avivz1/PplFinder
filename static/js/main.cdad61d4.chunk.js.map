{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","useState","status","setStatus","useEffect","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","setFavUser","filterPressed","removeFavUser","isFavPage","users","isLoading","hoveredUserId","setHoveredUserId","setIsLoadingExtra","scrollRef","useRef","pageNumber","handleMouseLeave","handleScroll","e","current","scrollTop","scrollHeight","clientHeight","Math","round","axios","get","params","page","then","res","data","results","forEach","x","push","onScroll","ref","map","user","index","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","location","street","number","city","country","undefined","localStorage","getItem","login","uuid","onClick","IconButton","Favorites","Content","Header","favUsers","setFavUsers","arr","Object","entries","JSON","parse","filter","u","removeItem","Home","setUsers","setIsLoading","fetchUsers","a","response","usePeopleFetch","countriesArr","setCountriesArr","filteredUsers","setFilteredUsers","length","includes","setItem","stringify","v","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","href","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.cdad61d4.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({isChecked, onChange, label, value }) => {\r\n\r\n  const [status, setStatus] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    onChange(status)\r\n  },[status])\r\n\r\n  const handleChange = () => {\r\n    setStatus(!status)\r\n\r\n  };\r\n\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, {useState,useRef} from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst UserList = ({setFavUser, filterPressed, removeFavUser, isFavPage, users, isLoading}) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [isLoadingExtra, setIsLoadingExtra] = useState(users);\r\n  const scrollRef = useRef() \r\n  var pageNumber = 1\r\n\r\n\r\n\r\n  const fetchUsers =  ()=>{\r\n    pageNumber=pageNumber+1;\r\n    axios.get(`https://randomuser.me/api/?results=25&page=`, { params: { page: pageNumber }} ).then((res)=>{\r\n      setIsLoadingExtra(true)\r\n      res.data.results.forEach(x=>{\r\n        users.push(x)\r\n      })\r\n      setIsLoadingExtra(false)\r\n    })\r\n\r\n  }\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n  \r\n  const handleScroll = (e) => {\r\n    if (scrollRef.current && !isFavPage) {\r\n      const { scrollTop, scrollHeight, clientHeight } = scrollRef.current;\r\n      \r\n      //if the end of the list\r\n      if (Math.round(scrollTop) + Math.round(clientHeight) === Math.round(scrollHeight)) {\r\n        fetchUsers();\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    \r\n    <S.UserList >\r\n      {!isFavPage&&\r\n      <S.Filters>\r\n        <CheckBox value=\"BR\" label=\"Brazil\"  onChange={(status)=>filterPressed(\"Brazil\",status)} />\r\n        <CheckBox value=\"AU\" label=\"Australia\" onChange={(status)=>filterPressed(\"Australia\",status)} />\r\n        <CheckBox value=\"CA\" label=\"Canada\"  onChange={(status)=>filterPressed(\"Canada\",status)} />\r\n        <CheckBox value=\"GE\" label=\"Germany\" onChange={(status)=>filterPressed(\"Germany\",status)} />\r\n        <CheckBox value=\"SP\" label=\"Spain\" onChange={(status)=>filterPressed(\"Spain\",status)} />\r\n      </S.Filters>\r\n      }\r\n\r\n      <S.List onScroll={(e)=>handleScroll(e)} ref={scrollRef}>\r\n\r\n          {users.map((user, index) => {\r\n\r\n          return (\r\n            \r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper isVisible={(index === hoveredUserId) || (localStorage.getItem(user.login.uuid)!=undefined || localStorage.getItem(user.login.uuid)!=null)} onClick={()=>{isFavPage?removeFavUser(user):setFavUser(user)}}>\r\n                <IconButton>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n\r\n","import styled from \"styled-components\";\n\nexport const Favorites = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { usePeopleFetch } from \"hooks\";\nimport * as S from \"./style\";\n\nconst Favorites = () => {\n  const [favUsers,setFavUsers] = useState([])\n  \n  useEffect(()=>{\n    var arr = []\n    for (const [key, value] of Object.entries(localStorage)) {\n      arr.push(JSON.parse(value))\n   }\n   setFavUsers(arr)\n  },[])\n\n  const removeFav = (user)=>{\n    setFavUsers(favUsers.filter(u=>u!=user))\n    localStorage.removeItem(user.login.uuid)\n  }\n\n\n\n  return (\n    <S.Favorites>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            Favorites Users\n          </Text>\n        </S.Header>\n        <UserList  users={favUsers} isFavPage={true} removeFavUser={removeFav} />\n      </S.Content>\n    </S.Favorites>\n  );\n};\n\nexport default Favorites;\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\n\r\nconst Home = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n  const [countriesArr, setCountriesArr] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState(users);\r\n\r\n  \r\n  useEffect(()=>{\r\n    setFilteredUsers(users)\r\n  },[users])\r\n\r\n\r\n  useEffect(()=>{\r\n    if(countriesArr.length>0){\r\n      setFilteredUsers(users.filter(u=>countriesArr.includes(u.location.country)))\r\n    }else{\r\n      setFilteredUsers(users)\r\n    }\r\n  },[countriesArr])\r\n\r\n\r\n  const filterProcess = (value,status)=>{\r\n      if(status==true){\r\n        setCountriesArr([...countriesArr,value])\r\n      }else{\r\n        setCountriesArr(countriesArr.filter(v=>v!=value))\r\n      }\r\n  }\r\n\r\n  const setUserFavPressed = (user)=>{\r\n    if(localStorage.getItem(user.login.uuid)!=undefined ||localStorage.getItem(user.login.uuid)!=null){\r\n        localStorage.removeItem(user.login.uuid)\r\n      }else{\r\n        localStorage.setItem(user.login.uuid,JSON.stringify(user))\r\n  \r\n      }\r\n    }\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList  setFavUser={setUserFavPressed} filterPressed={filterProcess} users={filteredUsers} isLoading={isLoading} isFavPage={false}/>\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(0);\r\n\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} href=\"/\"/>\r\n        <Tab label=\"Favorites\" index={1} href=\"/#/favorites\"/>\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { Favorites } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n   \r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}